// console.log(global); // таким образом можно увидеть какие глобальные объекты ест в нод.жс

//  например тот же сеттаймаут

// setTimeout(() => {
//   console.log("This is timeout");
// }, 2000);

// console.log(__dirname); // Получение пути до файла где была запущена эта команда (ответ консоли будет // C:\Users\ekuba\Desktop\Node.js\learn_node)
// console.log(__filename); // Получение пути с файлом и расширением где была запущена эта команда (C:\Users\ekuba\Desktop\Node.js\learn_node\global.js)
// console.log(process); // глобальный объект конфигураций и путей (частенько используется)
// console.log(process.env); глобальный объект со значением, который тоже часто используется
// также есть у process=>
// console.log(process.argv); // При запуске в терминале этого объекта мы получаем массив с двумя элементами [путь платформы Нод, путь до текущего файла] и сразу в терминале можно передать любое количесто значений в этот массив(но при запуске файла не пишем расширение заупскаемого файла а сразу новое значение для добавления в массив)
// console.log(`Hello ${process.argv[2]}`); // Это третье значение который мы передали в массив через терминал

// const url = new URL("https://megacom.com/path/name#test"); // это как мы видим конструктор, дальше используя url мы можем распарсить данный адрес с помощью методов

// console.log(url.hostname);
// console.log(url.href);
// console.log(url.pathname);
// console.log(url.hash);
